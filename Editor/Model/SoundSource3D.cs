// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class SoundSource3D: UnityToRebelFork.Editor.SoundSource
    {
        protected static readonly RbfxAttribute<float> NearDistanceAttr = new ("Near Distance", VariantType.VarFloat, new Variant(0f), _=>((SoundSource3D)_).NearDistance, (_,v)=>((SoundSource3D)_).NearDistance = v);
        protected static readonly RbfxAttribute<float> FarDistanceAttr = new ("Far Distance", VariantType.VarFloat, new Variant(100f), _=>((SoundSource3D)_).FarDistance, (_,v)=>((SoundSource3D)_).FarDistance = v);
        protected static readonly RbfxAttribute<float> InnerAngleAttr = new ("Inner Angle", VariantType.VarFloat, new Variant(360f), _=>((SoundSource3D)_).InnerAngle, (_,v)=>((SoundSource3D)_).InnerAngle = v);
        protected static readonly RbfxAttribute<float> OuterAngleAttr = new ("Outer Angle", VariantType.VarFloat, new Variant(360f), _=>((SoundSource3D)_).OuterAngle, (_,v)=>((SoundSource3D)_).OuterAngle = v);
        protected static readonly RbfxAttribute<float> RolloffFactorAttr = new ("Rolloff Factor", VariantType.VarFloat, new Variant(2f), _=>((SoundSource3D)_).RolloffFactor, (_,v)=>((SoundSource3D)_).RolloffFactor = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return NearDistanceAttr;
            yield return FarDistanceAttr;
            yield return InnerAngleAttr;
            yield return OuterAngleAttr;
            yield return RolloffFactorAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected float _nearDistance = 0f;

        protected float _farDistance = 100f;

        protected float _innerAngle = 360f;

        protected float _outerAngle = 360f;

        protected float _rolloffFactor = 2f;

        public float NearDistance
        {
            get => _nearDistance;
            set => _nearDistance = value;
        }

        public float FarDistance
        {
            get => _farDistance;
            set => _farDistance = value;
        }

        public float InnerAngle
        {
            get => _innerAngle;
            set => _innerAngle = value;
        }

        public float OuterAngle
        {
            get => _outerAngle;
            set => _outerAngle = value;
        }

        public float RolloffFactor
        {
            get => _rolloffFactor;
            set => _rolloffFactor = value;
        }
    }
}
