// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class PrefabReference: UnityToRebelFork.Editor.Component
    {
        protected static readonly RbfxAttribute<bool> InlineAttr = new ("Inline", VariantType.VarBool, new Variant(false), _=>((PrefabReference)_).Inline, (_,v)=>((PrefabReference)_).Inline = v);
        protected static readonly RbfxAttribute<bool> CommitAttr = new ("Commit", VariantType.VarBool, new Variant(false), _=>((PrefabReference)_).Commit, (_,v)=>((PrefabReference)_).Commit = v);
        protected static readonly RbfxAttribute<ResourceRef> PrefabAttr = new ("Prefab", VariantType.VarResourceRef, new Variant(new ResourceRef("PrefabResource", "")), _=>((PrefabReference)_).Prefab, (_,v)=>((PrefabReference)_).Prefab = v);
        protected static readonly RbfxAttribute<string> PathAttr = new ("Path", VariantType.VarString, new Variant(""), _=>((PrefabReference)_).Path, (_,v)=>((PrefabReference)_).Path = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return InlineAttr;
            yield return CommitAttr;
            yield return PrefabAttr;
            yield return PathAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected bool _inline = false;

        protected bool _commit = false;

        protected ResourceRef _prefab = new ResourceRef("PrefabResource", "");

        protected string _path = "";

        public bool Inline
        {
            get => _inline;
            set => _inline = value;
        }

        public bool Commit
        {
            get => _commit;
            set => _commit = value;
        }

        public ResourceRef Prefab
        {
            get => _prefab;
            set => _prefab = value;
        }

        public string Path
        {
            get => _path;
            set => _path = value;
        }
    }
}
