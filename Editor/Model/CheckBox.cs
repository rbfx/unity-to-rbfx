// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class CheckBox: UnityToRebelFork.Editor.BorderImage
    {
        protected static readonly RbfxAttribute<bool> IsCheckedAttr = new ("Is Checked", VariantType.VarBool, new Variant(false), _=>((CheckBox)_).IsChecked, (_,v)=>((CheckBox)_).IsChecked = v);
        protected static readonly RbfxAttribute<IntVector2> CheckedImageOffsetAttr = new ("Checked Image Offset", VariantType.VarIntVector2, new Variant(new IntVector2(0, 0)), _=>((CheckBox)_).CheckedImageOffset, (_,v)=>((CheckBox)_).CheckedImageOffset = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return IsCheckedAttr;
            yield return CheckedImageOffsetAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected bool _isChecked = false;

        protected IntVector2 _checkedImageOffset = new IntVector2(0, 0);

        public bool IsChecked
        {
            get => _isChecked;
            set => _isChecked = value;
        }

        public IntVector2 CheckedImageOffset
        {
            get => _checkedImageOffset;
            set => _checkedImageOffset = value;
        }
    }
}
