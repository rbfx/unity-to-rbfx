// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class CharacterConfigurator: UnityToRebelFork.Editor.Component
    {
        protected static readonly RbfxAttribute<ResourceRef> ConfigurationAttr = new ("Configuration", VariantType.VarResourceRef, new Variant(new ResourceRef("CharacterConfiguration", "")), _=>((CharacterConfigurator)_).Configuration, (_,v)=>((CharacterConfigurator)_).Configuration = v);
        protected static readonly RbfxAttribute<VariantMap> QueryAttr = new ("Query", VariantType.VarVariantMap, new Variant(new VariantMap()), _=>((CharacterConfigurator)_).Query, (_,v)=>((CharacterConfigurator)_).Query = v);
        protected static readonly RbfxAttribute<ResourceRef> SecondaryMaterialAttr = new ("Secondary Material", VariantType.VarResourceRef, new Variant(new ResourceRef("Material", "")), _=>((CharacterConfigurator)_).SecondaryMaterial, (_,v)=>((CharacterConfigurator)_).SecondaryMaterial = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return ConfigurationAttr;
            yield return QueryAttr;
            yield return SecondaryMaterialAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected ResourceRef _configuration = new ResourceRef("CharacterConfiguration", "");

        protected VariantMap _query = new VariantMap();

        protected ResourceRef _secondaryMaterial = new ResourceRef("Material", "");

        public ResourceRef Configuration
        {
            get => _configuration;
            set => _configuration = value;
        }

        public VariantMap Query
        {
            get => _query;
            set => _query = value;
        }

        public ResourceRef SecondaryMaterial
        {
            get => _secondaryMaterial;
            set => _secondaryMaterial = value;
        }
    }
}
