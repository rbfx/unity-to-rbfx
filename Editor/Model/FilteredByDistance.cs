// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class FilteredByDistance: UnityToRebelFork.Editor.NetworkBehavior
    {
        protected static readonly RbfxAttribute<bool> IsRelevantAttr = new ("Is Relevant", VariantType.VarBool, new Variant(true), _=>((FilteredByDistance)_).IsRelevant, (_,v)=>((FilteredByDistance)_).IsRelevant = v);
        protected static readonly RbfxAttribute<int> UpdatePeriodAttr = new ("Update Period", VariantType.VarInt, new Variant(0), _=>((FilteredByDistance)_).UpdatePeriod, (_,v)=>((FilteredByDistance)_).UpdatePeriod = v);
        protected static readonly RbfxAttribute<float> DistanceAttr = new ("Distance", VariantType.VarFloat, new Variant(100f), _=>((FilteredByDistance)_).Distance, (_,v)=>((FilteredByDistance)_).Distance = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return IsRelevantAttr;
            yield return UpdatePeriodAttr;
            yield return DistanceAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected bool _isRelevant = true;

        protected int _updatePeriod = 0;

        protected float _distance = 100f;

        public bool IsRelevant
        {
            get => _isRelevant;
            set => _isRelevant = value;
        }

        public int UpdatePeriod
        {
            get => _updatePeriod;
            set => _updatePeriod = value;
        }

        public float Distance
        {
            get => _distance;
            set => _distance = value;
        }
    }
}
