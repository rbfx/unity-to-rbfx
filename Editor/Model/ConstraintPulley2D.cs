// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class ConstraintPulley2D: UnityToRebelFork.Editor.Constraint2D
    {
        protected static readonly RbfxAttribute<bool> IsEnabledAttr = new ("Is Enabled", VariantType.VarBool, new Variant(true), _=>((ConstraintPulley2D)_).IsEnabled, (_,v)=>((ConstraintPulley2D)_).IsEnabled = v);
        protected static readonly RbfxAttribute<Vector2> OwnerBodyGroundAnchorAttr = new ("Owner Body Ground Anchor", VariantType.VarVector2, new Variant(new Vector2(0f, 0f)), _=>((ConstraintPulley2D)_).OwnerBodyGroundAnchor, (_,v)=>((ConstraintPulley2D)_).OwnerBodyGroundAnchor = v);
        protected static readonly RbfxAttribute<Vector2> OtherBodyGroundAnchorAttr = new ("Other Body Ground Anchor", VariantType.VarVector2, new Variant(new Vector2(0f, 0f)), _=>((ConstraintPulley2D)_).OtherBodyGroundAnchor, (_,v)=>((ConstraintPulley2D)_).OtherBodyGroundAnchor = v);
        protected static readonly RbfxAttribute<Vector2> OwnerBodyAnchorAttr = new ("Owner Body Anchor", VariantType.VarVector2, new Variant(new Vector2(0f, 0f)), _=>((ConstraintPulley2D)_).OwnerBodyAnchor, (_,v)=>((ConstraintPulley2D)_).OwnerBodyAnchor = v);
        protected static readonly RbfxAttribute<Vector2> OtherBodyAnchorAttr = new ("Other Body Anchor", VariantType.VarVector2, new Variant(new Vector2(0f, 0f)), _=>((ConstraintPulley2D)_).OtherBodyAnchor, (_,v)=>((ConstraintPulley2D)_).OtherBodyAnchor = v);
        protected static readonly RbfxAttribute<float> RatioAttr = new ("Ratio", VariantType.VarFloat, new Variant(0f), _=>((ConstraintPulley2D)_).Ratio, (_,v)=>((ConstraintPulley2D)_).Ratio = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return IsEnabledAttr;
            yield return OwnerBodyGroundAnchorAttr;
            yield return OtherBodyGroundAnchorAttr;
            yield return OwnerBodyAnchorAttr;
            yield return OtherBodyAnchorAttr;
            yield return RatioAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected bool _isEnabled = true;

        protected Vector2 _ownerBodyGroundAnchor = new Vector2(0f, 0f);

        protected Vector2 _otherBodyGroundAnchor = new Vector2(0f, 0f);

        protected Vector2 _ownerBodyAnchor = new Vector2(0f, 0f);

        protected Vector2 _otherBodyAnchor = new Vector2(0f, 0f);

        protected float _ratio = 0f;

        public bool IsEnabled
        {
            get => _isEnabled;
            set => _isEnabled = value;
        }

        public Vector2 OwnerBodyGroundAnchor
        {
            get => _ownerBodyGroundAnchor;
            set => _ownerBodyGroundAnchor = value;
        }

        public Vector2 OtherBodyGroundAnchor
        {
            get => _otherBodyGroundAnchor;
            set => _otherBodyGroundAnchor = value;
        }

        public Vector2 OwnerBodyAnchor
        {
            get => _ownerBodyAnchor;
            set => _ownerBodyAnchor = value;
        }

        public Vector2 OtherBodyAnchor
        {
            get => _otherBodyAnchor;
            set => _otherBodyAnchor = value;
        }

        public float Ratio
        {
            get => _ratio;
            set => _ratio = value;
        }
    }
}
