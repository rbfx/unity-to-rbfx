// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class FreeFlyController: UnityToRebelFork.Editor.Component
    {
        protected static readonly RbfxAttribute<float> SpeedAttr = new ("Speed", VariantType.VarFloat, new Variant(20f), _=>((FreeFlyController)_).Speed, (_,v)=>((FreeFlyController)_).Speed = v);
        protected static readonly RbfxAttribute<float> AcceleratedSpeedAttr = new ("Accelerated Speed", VariantType.VarFloat, new Variant(100f), _=>((FreeFlyController)_).AcceleratedSpeed, (_,v)=>((FreeFlyController)_).AcceleratedSpeed = v);
        protected static readonly RbfxAttribute<float> MinPitchAttr = new ("Min Pitch", VariantType.VarFloat, new Variant(-90f), _=>((FreeFlyController)_).MinPitch, (_,v)=>((FreeFlyController)_).MinPitch = v);
        protected static readonly RbfxAttribute<float> MaxPitchAttr = new ("Max Pitch", VariantType.VarFloat, new Variant(90f), _=>((FreeFlyController)_).MaxPitch, (_,v)=>((FreeFlyController)_).MaxPitch = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return SpeedAttr;
            yield return AcceleratedSpeedAttr;
            yield return MinPitchAttr;
            yield return MaxPitchAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected float _speed = 20f;

        protected float _acceleratedSpeed = 100f;

        protected float _minPitch = -90f;

        protected float _maxPitch = 90f;

        public float Speed
        {
            get => _speed;
            set => _speed = value;
        }

        public float AcceleratedSpeed
        {
            get => _acceleratedSpeed;
            set => _acceleratedSpeed = value;
        }

        public float MinPitch
        {
            get => _minPitch;
            set => _minPitch = value;
        }

        public float MaxPitch
        {
            get => _maxPitch;
            set => _maxPitch = value;
        }
    }
}
