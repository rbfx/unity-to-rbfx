// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class UISelectable: UnityToRebelFork.Editor.UIElement
    {
        protected static readonly RbfxAttribute<Color> SelectionColorAttr = new ("Selection Color", VariantType.VarColor, new Variant(new Color(0f, 0f, 0f, 0f)), _=>((UISelectable)_).SelectionColor, (_,v)=>((UISelectable)_).SelectionColor = v);
        protected static readonly RbfxAttribute<Color> HoverColorAttr = new ("Hover Color", VariantType.VarColor, new Variant(new Color(0f, 0f, 0f, 0f)), _=>((UISelectable)_).HoverColor, (_,v)=>((UISelectable)_).HoverColor = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return SelectionColorAttr;
            yield return HoverColorAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected Color _selectionColor = new Color(0f, 0f, 0f, 0f);

        protected Color _hoverColor = new Color(0f, 0f, 0f, 0f);

        public Color SelectionColor
        {
            get => _selectionColor;
            set => _selectionColor = value;
        }

        public Color HoverColor
        {
            get => _hoverColor;
            set => _hoverColor = value;
        }
    }
}
