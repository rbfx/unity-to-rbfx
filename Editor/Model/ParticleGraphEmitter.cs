// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class ParticleGraphEmitter: UnityToRebelFork.Editor.Component
    {
        protected static readonly RbfxAttribute<bool> IsEnabledAttr = new ("Is Enabled", VariantType.VarBool, new Variant(true), _=>((ParticleGraphEmitter)_).IsEnabled, (_,v)=>((ParticleGraphEmitter)_).IsEnabled = v);
        protected static readonly RbfxAttribute<ResourceRef> EffectAttr = new ("Effect", VariantType.VarResourceRef, new Variant(new ResourceRef("ParticleGraphEmitter", "")), _=>((ParticleGraphEmitter)_).Effect, (_,v)=>((ParticleGraphEmitter)_).Effect = v);
        protected static readonly RbfxAttribute<int> ViewMaskAttr = new ("View Mask", VariantType.VarInt, new Variant(-1), _=>((ParticleGraphEmitter)_).ViewMask, (_,v)=>((ParticleGraphEmitter)_).ViewMask = v);
        protected static readonly RbfxAttribute<int> LightMaskAttr = new ("Light Mask", VariantType.VarInt, new Variant(-1), _=>((ParticleGraphEmitter)_).LightMask, (_,v)=>((ParticleGraphEmitter)_).LightMask = v);
        protected static readonly RbfxAttribute<int> ShadowMaskAttr = new ("Shadow Mask", VariantType.VarInt, new Variant(-1), _=>((ParticleGraphEmitter)_).ShadowMask, (_,v)=>((ParticleGraphEmitter)_).ShadowMask = v);
        protected static readonly RbfxAttribute<int> ZoneMaskAttr = new ("Zone Mask", VariantType.VarInt, new Variant(-1), _=>((ParticleGraphEmitter)_).ZoneMask, (_,v)=>((ParticleGraphEmitter)_).ZoneMask = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return IsEnabledAttr;
            yield return EffectAttr;
            yield return ViewMaskAttr;
            yield return LightMaskAttr;
            yield return ShadowMaskAttr;
            yield return ZoneMaskAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected bool _isEnabled = true;

        protected ResourceRef _effect = new ResourceRef("ParticleGraphEmitter", "");

        protected int _viewMask = -1;

        protected int _lightMask = -1;

        protected int _shadowMask = -1;

        protected int _zoneMask = -1;

        public bool IsEnabled
        {
            get => _isEnabled;
            set => _isEnabled = value;
        }

        public ResourceRef Effect
        {
            get => _effect;
            set => _effect = value;
        }

        public int ViewMask
        {
            get => _viewMask;
            set => _viewMask = value;
        }

        public int LightMask
        {
            get => _lightMask;
            set => _lightMask = value;
        }

        public int ShadowMask
        {
            get => _shadowMask;
            set => _shadowMask = value;
        }

        public int ZoneMask
        {
            get => _zoneMask;
            set => _zoneMask = value;
        }
    }
}
