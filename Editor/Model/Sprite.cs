// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class Sprite: UnityToRebelFork.Editor.UIElement
    {
        protected static readonly RbfxAttribute<IntVector2> HotspotAttr = new ("Hotspot", VariantType.VarIntVector2, new Variant(new IntVector2(0, 0)), _=>((Sprite)_).Hotspot, (_,v)=>((Sprite)_).Hotspot = v);
        protected static readonly RbfxAttribute<Vector2> ScaleAttr = new ("Scale", VariantType.VarVector2, new Variant(new Vector2(1f, 1f)), _=>((Sprite)_).Scale, (_,v)=>((Sprite)_).Scale = v);
        protected static readonly RbfxAttribute<float> RotationAttr = new ("Rotation", VariantType.VarFloat, new Variant(0f), _=>((Sprite)_).Rotation, (_,v)=>((Sprite)_).Rotation = v);
        protected static readonly RbfxAttribute<ResourceRef> TextureAttr = new ("Texture", VariantType.VarResourceRef, new Variant(new ResourceRef("Texture2D", "")), _=>((Sprite)_).Texture, (_,v)=>((Sprite)_).Texture = v);
        protected static readonly RbfxAttribute<IntRect> ImageRectAttr = new ("Image Rect", VariantType.VarIntRect, new Variant(new IntRect(0, 0, 0, 0)), _=>((Sprite)_).ImageRect, (_,v)=>((Sprite)_).ImageRect = v);
        protected static readonly RbfxAttribute<string> BlendModeAttr = new ("Blend Mode", VariantType.VarString, new Variant(UnityToRebelFork.Editor.BlendMode.replace), _=>((Sprite)_).BlendMode, (_,v)=>((Sprite)_).BlendMode = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return HotspotAttr;
            yield return ScaleAttr;
            yield return RotationAttr;
            yield return TextureAttr;
            yield return ImageRectAttr;
            yield return BlendModeAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected IntVector2 _hotspot = new IntVector2(0, 0);

        protected Vector2 _scale = new Vector2(1f, 1f);

        protected float _rotation = 0f;

        protected ResourceRef _texture = new ResourceRef("Texture2D", "");

        protected IntRect _imageRect = new IntRect(0, 0, 0, 0);

        protected string _blendMode = UnityToRebelFork.Editor.BlendMode.replace;

        public IntVector2 Hotspot
        {
            get => _hotspot;
            set => _hotspot = value;
        }

        public Vector2 Scale
        {
            get => _scale;
            set => _scale = value;
        }

        public float Rotation
        {
            get => _rotation;
            set => _rotation = value;
        }

        public ResourceRef Texture
        {
            get => _texture;
            set => _texture = value;
        }

        public IntRect ImageRect
        {
            get => _imageRect;
            set => _imageRect = value;
        }

        public string BlendMode
        {
            get => _blendMode;
            set => _blendMode = value;
        }
    }
}
