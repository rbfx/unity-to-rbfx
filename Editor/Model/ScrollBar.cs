// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class ScrollBar: UnityToRebelFork.Editor.BorderImage
    {
        protected static readonly RbfxAttribute<string> OrientationAttr = new ("Orientation", VariantType.VarString, new Variant(UnityToRebelFork.Editor.Orientation.Horizontal), _=>((ScrollBar)_).Orientation, (_,v)=>((ScrollBar)_).Orientation = v);
        protected static readonly RbfxAttribute<float> RangeAttr = new ("Range", VariantType.VarFloat, new Variant(1f), _=>((ScrollBar)_).Range, (_,v)=>((ScrollBar)_).Range = v);
        protected static readonly RbfxAttribute<float> ValueAttr = new ("Value", VariantType.VarFloat, new Variant(0f), _=>((ScrollBar)_).Value, (_,v)=>((ScrollBar)_).Value = v);
        protected static readonly RbfxAttribute<float> ScrollStepAttr = new ("Scroll Step", VariantType.VarFloat, new Variant(0.1f), _=>((ScrollBar)_).ScrollStep, (_,v)=>((ScrollBar)_).ScrollStep = v);
        protected static readonly RbfxAttribute<float> StepFactorAttr = new ("Step Factor", VariantType.VarFloat, new Variant(1f), _=>((ScrollBar)_).StepFactor, (_,v)=>((ScrollBar)_).StepFactor = v);
        protected static readonly RbfxAttribute<IntRect> LeftImageRectAttr = new ("Left Image Rect", VariantType.VarIntRect, new Variant(new IntRect(0, 0, 0, 0)), _=>((ScrollBar)_).LeftImageRect, (_,v)=>((ScrollBar)_).LeftImageRect = v);
        protected static readonly RbfxAttribute<IntRect> RightImageRectAttr = new ("Right Image Rect", VariantType.VarIntRect, new Variant(new IntRect(0, 0, 0, 0)), _=>((ScrollBar)_).RightImageRect, (_,v)=>((ScrollBar)_).RightImageRect = v);
        protected static readonly RbfxAttribute<IntRect> UpImageRectAttr = new ("Up Image Rect", VariantType.VarIntRect, new Variant(new IntRect(0, 0, 0, 0)), _=>((ScrollBar)_).UpImageRect, (_,v)=>((ScrollBar)_).UpImageRect = v);
        protected static readonly RbfxAttribute<IntRect> DownImageRectAttr = new ("Down Image Rect", VariantType.VarIntRect, new Variant(new IntRect(0, 0, 0, 0)), _=>((ScrollBar)_).DownImageRect, (_,v)=>((ScrollBar)_).DownImageRect = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return OrientationAttr;
            yield return RangeAttr;
            yield return ValueAttr;
            yield return ScrollStepAttr;
            yield return StepFactorAttr;
            yield return LeftImageRectAttr;
            yield return RightImageRectAttr;
            yield return UpImageRectAttr;
            yield return DownImageRectAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected string _orientation = UnityToRebelFork.Editor.Orientation.Horizontal;

        protected float _range = 1f;

        protected float _value = 0f;

        protected float _scrollStep = 0.1f;

        protected float _stepFactor = 1f;

        protected IntRect _leftImageRect = new IntRect(0, 0, 0, 0);

        protected IntRect _rightImageRect = new IntRect(0, 0, 0, 0);

        protected IntRect _upImageRect = new IntRect(0, 0, 0, 0);

        protected IntRect _downImageRect = new IntRect(0, 0, 0, 0);

        public string Orientation
        {
            get => _orientation;
            set => _orientation = value;
        }

        public float Range
        {
            get => _range;
            set => _range = value;
        }

        public float Value
        {
            get => _value;
            set => _value = value;
        }

        public float ScrollStep
        {
            get => _scrollStep;
            set => _scrollStep = value;
        }

        public float StepFactor
        {
            get => _stepFactor;
            set => _stepFactor = value;
        }

        public IntRect LeftImageRect
        {
            get => _leftImageRect;
            set => _leftImageRect = value;
        }

        public IntRect RightImageRect
        {
            get => _rightImageRect;
            set => _rightImageRect = value;
        }

        public IntRect UpImageRect
        {
            get => _upImageRect;
            set => _upImageRect = value;
        }

        public IntRect DownImageRect
        {
            get => _downImageRect;
            set => _downImageRect = value;
        }
    }
}
