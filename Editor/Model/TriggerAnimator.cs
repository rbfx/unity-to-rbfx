// <auto-generated />

using System.Collections.Generic;
using UnityEngine;

namespace UnityToRebelFork.Editor
{
    public partial class TriggerAnimator: UnityToRebelFork.Editor.Component
    {
        protected static readonly RbfxAttribute<ResourceRef> EnterAnimationAttr = new ("Enter Animation", VariantType.VarResourceRef, new Variant(new ResourceRef("Animation", "")), _=>((TriggerAnimator)_).EnterAnimation, (_,v)=>((TriggerAnimator)_).EnterAnimation = v);
        protected static readonly RbfxAttribute<ResourceRef> ExitAnimationAttr = new ("Exit Animation", VariantType.VarResourceRef, new Variant(new ResourceRef("Animation", "")), _=>((TriggerAnimator)_).ExitAnimation, (_,v)=>((TriggerAnimator)_).ExitAnimation = v);
        protected static readonly RbfxAttribute<bool> IsEnteredAttr = new ("Is Entered", VariantType.VarBool, new Variant(false), _=>((TriggerAnimator)_).IsEntered, (_,v)=>((TriggerAnimator)_).IsEntered = v);

        public override IEnumerable<RbfxAttribute> GetTypeAttributes()
        {
            yield return EnterAnimationAttr;
            yield return ExitAnimationAttr;
            yield return IsEnteredAttr;
            foreach (var a in base.GetTypeAttributes()) yield return a;
        }

        protected ResourceRef _enterAnimation = new ResourceRef("Animation", "");

        protected ResourceRef _exitAnimation = new ResourceRef("Animation", "");

        protected bool _isEntered = false;

        public ResourceRef EnterAnimation
        {
            get => _enterAnimation;
            set => _enterAnimation = value;
        }

        public ResourceRef ExitAnimation
        {
            get => _exitAnimation;
            set => _exitAnimation = value;
        }

        public bool IsEntered
        {
            get => _isEntered;
            set => _isEntered = value;
        }
    }
}
